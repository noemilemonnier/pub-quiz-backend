{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nvar defaultProps = {\n  disabled: false\n};\n\nvar AbstractNavItem = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AbstractNavItem, _React$Component);\n\n  function AbstractNavItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = AbstractNavItem.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        active = _this$props.active,\n        className = _this$props.className,\n        tabIndex = _this$props.tabIndex,\n        eventKey = _this$props.eventKey,\n        onSelect = _this$props.onSelect,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"className\", \"tabIndex\", \"eventKey\", \"onSelect\", \"as\"]);\n\n    var navKey = makeEventKey(eventKey, props.href);\n    return React.createElement(SelectableContext.Consumer, null, function (parentOnSelect) {\n      return React.createElement(NavContext.Consumer, null, function (navContext) {\n        var isActive = active;\n\n        if (navContext) {\n          if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n          props['data-rb-event-key'] = navKey;\n          props.id = navContext.getControllerId(navKey);\n          props['aria-controls'] = navContext.getControlledId(navKey);\n          isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n        }\n\n        if (props.role === 'tab') {\n          props.tabIndex = isActive ? tabIndex : -1;\n          props['aria-selected'] = isActive;\n        }\n\n        return React.createElement(Component, _extends({}, props, {\n          className: classNames(className, isActive && 'active'),\n          onClick: function onClick(e) {\n            var onClick = _this.props.onClick;\n            if (onClick) onClick(e);\n            if (navKey == null) return;\n            if (onSelect) onSelect(navKey, e);\n            if (parentOnSelect) parentOnSelect(navKey, e);\n          }\n        }));\n      });\n    });\n  };\n\n  return AbstractNavItem;\n}(React.Component);\n\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","map":{"version":3,"sources":["/Users/noemilemonnier/Desktop/client-side/node_modules/react-bootstrap/es/AbstractNavItem.js"],"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","classNames","React","NavContext","SelectableContext","makeEventKey","defaultProps","disabled","AbstractNavItem","_React$Component","apply","arguments","_proto","prototype","render","_this","_this$props","props","active","className","tabIndex","eventKey","onSelect","Component","as","navKey","href","createElement","Consumer","parentOnSelect","navContext","isActive","role","id","getControllerId","getControlledId","activeKey","onClick","e"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nvar defaultProps = {\n  disabled: false\n};\n\nvar AbstractNavItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(AbstractNavItem, _React$Component);\n\n  function AbstractNavItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = AbstractNavItem.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        active = _this$props.active,\n        className = _this$props.className,\n        tabIndex = _this$props.tabIndex,\n        eventKey = _this$props.eventKey,\n        onSelect = _this$props.onSelect,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"className\", \"tabIndex\", \"eventKey\", \"onSelect\", \"as\"]);\n\n    var navKey = makeEventKey(eventKey, props.href);\n    return React.createElement(SelectableContext.Consumer, null, function (parentOnSelect) {\n      return React.createElement(NavContext.Consumer, null, function (navContext) {\n        var isActive = active;\n\n        if (navContext) {\n          if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n          props['data-rb-event-key'] = navKey;\n          props.id = navContext.getControllerId(navKey);\n          props['aria-controls'] = navContext.getControlledId(navKey);\n          isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n        }\n\n        if (props.role === 'tab') {\n          props.tabIndex = isActive ? tabIndex : -1;\n          props['aria-selected'] = isActive;\n        }\n\n        return React.createElement(Component, _extends({}, props, {\n          className: classNames(className, isActive && 'active'),\n          onClick: function onClick(e) {\n            var onClick = _this.props.onClick;\n            if (onClick) onClick(e);\n            if (navKey == null) return;\n            if (onSelect) onSelect(navKey, e);\n            if (parentOnSelect) parentOnSelect(navKey, e);\n          }\n        }));\n      });\n    });\n  };\n\n  return AbstractNavItem;\n}(React.Component);\n\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;"]},"metadata":{},"sourceType":"module"}