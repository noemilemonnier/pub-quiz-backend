{"ast":null,"code":"var _jsxFileName = \"/Users/noemilemonnier/Desktop/client-side/src/pages/TeamsList.jsx\";\nimport React, { Component } from 'react';\nimport { useTable } from \"react-table\";\nimport api from '../api';\nimport styled from 'styled-components';\nimport '../style/react-table.css';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n\nclass TeamsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      teams: []\n    };\n    this.header = [{\n      title: \"Name\",\n      prop: \"name\",\n      filterable: true\n    }, {\n      title: \"Team Names\",\n      prop: \"teamMembers\",\n      filterable: true\n    }, {\n      title: \"Score\",\n      prop: \"score\",\n      sortable: true,\n      filterable: true\n    }];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/teams\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        teams: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error: error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      teams\n    } = this.state;\n    const teamsData = this.state.teams;\n    const columns = [{\n      Header: 'Name',\n      accessor: 'name',\n      filterable: true\n    }, {\n      Header: 'Team Members',\n      accessor: 'teamMembers',\n      filterable: true\n    }, {\n      Header: 'Score',\n      accessor: 'score',\n      filterable: true\n    }];\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 18\n        }\n      }, \"Loading...\");\n    } else {\n      console.log(this.state.teams); //Declaring Table\n\n      const Table = ({\n        columns,\n        teamsData\n      }) => {\n        const {\n          getTableProps,\n          getTableBodyProps,\n          headerGroups,\n          rows,\n          prepareRow\n        } = useTable({\n          columns,\n          teamsData\n        });\n        return /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"thead\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }\n        }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }), column.render(\"Header\")))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }), rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 23\n            }\n          }), row.cells.map(cell => {\n            return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 34\n              }\n            }), cell.render(\"Cell\"));\n          }));\n        })));\n      };\n\n      return /*#__PURE__*/React.createElement(Wrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, \" Hello \"), /*#__PURE__*/React.createElement(Table, {\n        columns: columns,\n        data: this.state.teams,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }));\n    }\n  }\n\n}\n\nexport default TeamsList;","map":{"version":3,"sources":["/Users/noemilemonnier/Desktop/client-side/src/pages/TeamsList.jsx"],"names":["React","Component","useTable","api","styled","Wrapper","div","TeamsList","constructor","props","state","error","isLoaded","teams","header","title","prop","filterable","sortable","componentDidMount","fetch","then","res","json","result","setState","render","teamsData","columns","Header","accessor","message","console","log","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { useTable } from \"react-table\";\nimport api from '../api'\nimport styled from 'styled-components'\nimport '../style/react-table.css'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nclass TeamsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            teams: []\n          };\n          this.header = [\n            { title: \"Name\", prop: \"name\", filterable: true },\n            {\n              title: \"Team Names\",\n              prop: \"teamMembers\",\n              filterable: true\n            },\n            { title: \"Score\", prop: \"score\", sortable: true, filterable: true }\n          ];\n      }\n    \n      componentDidMount() {\n          fetch(\"http://localhost:8080/teams\")\n            .then(res => res.json())\n            .then(\n            result => {\n                this.setState({\n                isLoaded: true,\n                teams: result\n                });\n            },\n            error => {\n                this.setState({\n                isLoaded: true,\n                error: error\n            });\n            }\n        );\n      }\n\n    \n\n      render() {\n        const { error, isLoaded, teams } = this.state;\n        const teamsData = this.state.teams;\n\n        const columns = [\n            {\n                Header: 'Name',\n                accessor: 'name',\n                filterable: true,\n            },\n            {\n                Header: 'Team Members',\n                accessor: 'teamMembers',\n                filterable: true,\n            },\n            {\n                Header: 'Score',\n                accessor: 'score',\n                filterable: true,\n            },\n        ]\n\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n          console.log(this.state.teams);\n\n          //Declaring Table\n          const Table = ({ columns, teamsData}) => {\n            const {\n              getTableProps,\n              getTableBodyProps,\n              headerGroups,\n              rows,\n              prepareRow\n            } = useTable({\n              columns,\n              teamsData\n            });\n          \n            return (\n              <table {...getTableProps()}>\n                <thead>\n                  {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                      <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                          return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            );\n          };\n\n\n\n          return (\n            <Wrapper>\n              <h1> Hello </h1>\n              <Table columns={columns} data={this.state.teams} />\n            </Wrapper>\n          );\n        }\n      }\n    }\n\nexport default TeamsList"]},"metadata":{},"sourceType":"module"}