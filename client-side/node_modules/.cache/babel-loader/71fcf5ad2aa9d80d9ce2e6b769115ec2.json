{"ast":null,"code":"var _jsxFileName = \"/Users/noemilemonnier/Desktop/client-side/src/pages/TeamsList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport api from '../api';\nimport styled from 'styled-components';\nimport '../style/react-table.css';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n\nclass TeamsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.get('/teams', {\n        responseType: 'json'\n      }).then(teams => {\n        this.setState({\n          tableData: teams.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      teams: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/teams').then(res => res.json()).then(json => json.teams).then(teams => this.setState({\n      'teams': teams\n    }));\n  }\n\n  render() {\n    const {\n      teams\n    } = this.state;\n    console.log('TCL: TeamsList -> render -> teams', teams);\n\n    const Table = ({\n      teams\n    }) => {\n      return /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, \"Region\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"Memory\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"CPUs\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"Disk Size\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, droplets.length > 0 ? droplets.map((droplet, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }, droplet.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, droplet.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, droplet.region.slug), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }\n        }, droplet.memory), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        }, droplet.vcpus), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }\n        }, droplet.disk));\n      }) : /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, \"Loading...\"))));\n    };\n\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      teams: this.state.teams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default TeamsList;","map":{"version":3,"sources":["/Users/noemilemonnier/Desktop/client-side/src/pages/TeamsList.jsx"],"names":["React","Component","ReactTable","api","styled","Wrapper","div","TeamsList","constructor","props","componentDidMount","setState","isLoading","get","responseType","then","teams","tableData","data","state","fetch","res","json","render","console","log","Table","droplets","length","map","droplet","index","id","name","region","slug","memory","vcpus","disk"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport api from '../api'\nimport styled from 'styled-components'\nimport '../style/react-table.css'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nclass TeamsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          teams: []\n        }\n      }\n    \n      componentDidMount() {\n        fetch('http://localhost:8080/teams')\n        .then(res => res.json())\n        .then(json => json.teams)\n        .then(teams => this.setState({ 'teams': teams }))\n      }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.get('/teams', { responseType: 'json' }).then(teams => {\n            this.setState({\n                tableData: teams.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    render() {\n        const { teams } = this.state\n        console.log('TCL: TeamsList -> render -> teams', teams)\n        const Table = ({ teams }) => {\n            return (\n              <table>\n                <thead>\n                  <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Region</th>\n                    <th>Memory</th>\n                    <th>CPUs</th>\n                    <th>Disk Size</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { (droplets.length > 0) ? droplets.map( (droplet, index) => {\n                     return (\n                      <tr key={ index }>\n                        <td>{ droplet.id }</td>\n                        <td>{ droplet.name }</td>\n                        <td>{ droplet.region.slug}</td>\n                        <td>{ droplet.memory }</td>\n                        <td>{ droplet.vcpus }</td>\n                        <td>{ droplet.disk }</td>\n                      </tr>\n                    )\n                   }) : <tr><td colSpan=\"5\">Loading...</td></tr> }\n                </tbody>\n              </table>\n            );\n          }\n\n        return (\n            <Wrapper>\n                    <Table teams={ this.state.teams } />\n            </Wrapper>\n        )\n    }\n}\n\nexport default TeamsList"]},"metadata":{},"sourceType":"module"}