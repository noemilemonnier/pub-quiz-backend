{"ast":null,"code":"var _jsxFileName = \"/Users/noemilemonnier/Desktop/client-side/src/components/ReactTable.js\";\nimport React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useTable, useSortBy } from \"react-table\";\n/**\n * As in the previous versions, any react table needs colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react table has data that consist of an array of JSONs\n */\n\nconst ReactTable = ({\n  columns,\n  data\n}) => {\n  // you can get the react table functions by using the hook useStable\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, // hook for sorting\n  useSortBy);\n  return /*#__PURE__*/React.createElement(Table, Object.assign({\n    id: \"teamslist\",\n    bordered: true\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), headerGroup.headers.map(column => {\n    // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\n    const {\n      render,\n      getHeaderProps,\n      isSorted,\n      isSortedDesc,\n      getSortByToggleProps\n    } = column;\n    const extraClass = isSorted ? isSortedDesc ? \"desc\" : \"asc\" : \"\";\n    return /*#__PURE__*/React.createElement(\"th\", Object.assign({\n      className: extraClass // getHeaderProps now receives a function\n\n    }, getHeaderProps(getSortByToggleProps()), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), render(\"Header\"));\n  })))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  })));\n};\n\nexport default ReactTable;","map":{"version":3,"sources":["/Users/noemilemonnier/Desktop/client-side/src/components/ReactTable.js"],"names":["React","Table","useTable","useSortBy","ReactTable","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","render","getHeaderProps","isSorted","isSortedDesc","getSortByToggleProps","extraClass","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AAGA;;;;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACxC;AACA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFT,QAAQ,CACV;AACEG,IAAAA,OADF;AAEEC,IAAAA;AAFF,GADU,EAKV;AACAH,EAAAA,SANU,CANZ;AAcA,sBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,QAAQ;AAA9B,KAAmCI,aAAa,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBAC3B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,IAAI;AACjC;AACA,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,cAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,YAJI;AAKJC,MAAAA;AALI,QAMFL,MANJ;AAOA,UAAMM,UAAU,GAAGH,QAAQ,GACvBC,YAAY,GACV,MADU,GAEV,KAHqB,GAIvB,EAJJ;AAKA,wBACE;AACE,MAAA,SAAS,EAAEE,UADb,CAEE;;AAFF,OAGMJ,cAAc,CAACG,oBAAoB,EAArB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKGJ,MAAM,CAAC,QAAD,CALT,CADF;AASD,GAvBA,CADH,CADD,CADH,CADF,eA+BE,+CAAWT,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACE,GAAL,CAAS,CAACW,GAAD,EAAMC,CAAN,KAAY;AACpBb,IAAAA,UAAU,CAACY,GAAD,CAAV;AACA,wBACE,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUd,GAAV,CAAce,IAAI,IAAI;AACrB,0BAAO,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACV,MAAL,CAAY,MAAZ,CAA9B,CAAP;AACD,KAFA,CADH,CADF;AAOD,GATA,CADH,CA/BF,CADF;AA8CD,CA9DD;;AAgEA,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useTable, useSortBy } from \"react-table\";\n\n\n/**\n * As in the previous versions, any react table needs colums where at the core we have a field Header, and accessor\n * As in the previous versions, a react table has data that consist of an array of JSONs\n */\nconst ReactTable = ({ columns, data }) => {\n  // you can get the react table functions by using the hook useStable\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    // hook for sorting\n    useSortBy\n  );\n  return (\n    <Table id='teamslist' bordered {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => {\n              // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\n              const {\n                render,\n                getHeaderProps,\n                isSorted,\n                isSortedDesc,\n                getSortByToggleProps\n              } = column;\n              const extraClass = isSorted\n                ? isSortedDesc\n                  ? \"desc\"\n                  : \"asc\"\n                : \"\";\n              return (\n                <th\n                  className={extraClass}\n                  // getHeaderProps now receives a function\n                  {...getHeaderProps(getSortByToggleProps())}\n                >\n                  {render(\"Header\")}\n                </th>\n              );\n            })}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default ReactTable;"]},"metadata":{},"sourceType":"module"}