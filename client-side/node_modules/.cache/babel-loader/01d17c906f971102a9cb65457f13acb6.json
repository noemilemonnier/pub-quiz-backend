{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar object_1 = require(\"./helpers/object\");\n\nfunction BodyRow(_a) {\n  var tableHeaders = _a.tableHeaders,\n      data = _a.data,\n      rowIdx = _a.rowIdx,\n      classes = _a.classes,\n      components = _a.components,\n      onClick = _a.onClick;\n  var row = [];\n\n  for (var i = 0; i < tableHeaders.length; i += 1) {\n    var cell = tableHeaders[i].cell;\n    var value = '';\n\n    if (cell === undefined) {\n      value = data[rowIdx][tableHeaders[i].prop];\n    } else {\n      value = cell(data[rowIdx]);\n    }\n\n    row.push(react_1.default.createElement(components.TableCell, {\n      key: \"col-\" + rowIdx + i,\n      className: object_1.makeClasses('tbody-td', classes.tbodyCol)\n    }, value));\n  }\n\n  function onRowClick() {\n    if (typeof onClick === 'function') {\n      onClick(data[rowIdx]);\n    }\n  }\n\n  return react_1.default.createElement(components.TableRow, {\n    className: object_1.makeClasses('tbody-tr', classes.tbodyRow),\n    onClick: onRowClick\n  }, row);\n}\n\nexports.default = BodyRow;","map":{"version":3,"sources":["../src/BodyRow.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAOA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAcA,SAAwB,OAAxB,CAAgC,EAAhC,EAOe;MANb,YAAA,GAAA,EAAA,CAAA,Y;MACA,IAAA,GAAA,EAAA,CAAA,I;MACA,MAAA,GAAA,EAAA,CAAA,M;MACA,OAAA,GAAA,EAAA,CAAA,O;MACA,UAAA,GAAA,EAAA,CAAA,U;MACA,OAAA,GAAA,EAAA,CAAA,O;AAEA,MAAM,GAAG,GAAG,EAAZ;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,YAAY,CAAC,MAAjC,EAAyC,CAAC,IAAI,CAA9C,EAAiD;AAC/C,QAAM,IAAI,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAA7B;AACA,QAAI,KAAK,GAAoB,EAA7B;;AAEA,QAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,MAAA,KAAK,GAAG,IAAI,CAAC,MAAD,CAAJ,CAAa,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAA7B,CAAR;AACD,KAFD,MAEO;AACL,MAAA,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAD,CAAL,CAAZ;AACD;;AAED,IAAA,GAAG,CAAC,IAAJ,CACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAU,CAAC,SAAZ,EAAqB;AACnB,MAAA,GAAG,EAAE,SAAO,MAAP,GAAgB,CADF;AAEnB,MAAA,SAAS,EAAE,QAAA,CAAA,WAAA,CAAY,UAAZ,EAAwB,OAAO,CAAC,QAAhC;AAFQ,KAArB,EAIG,KAJH,CADF;AAQD;;AAED,WAAS,UAAT,GAAmB;AACjB,QAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AACjC,MAAA,OAAO,CAAC,IAAI,CAAC,MAAD,CAAL,CAAP;AACD;AACF;;AAED,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAU,CAAC,QAAZ,EAAoB;AAClB,IAAA,SAAS,EAAE,QAAA,CAAA,WAAA,CAAY,UAAZ,EAAwB,OAAO,CAAC,QAAhC,CADO;AAElB,IAAA,OAAO,EAAE;AAFS,GAApB,EAIG,GAJH,CADF;AAQD;;AA5CD,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar object_1 = require(\"./helpers/object\");\nfunction BodyRow(_a) {\n    var tableHeaders = _a.tableHeaders, data = _a.data, rowIdx = _a.rowIdx, classes = _a.classes, components = _a.components, onClick = _a.onClick;\n    var row = [];\n    for (var i = 0; i < tableHeaders.length; i += 1) {\n        var cell = tableHeaders[i].cell;\n        var value = '';\n        if (cell === undefined) {\n            value = data[rowIdx][tableHeaders[i].prop];\n        }\n        else {\n            value = cell(data[rowIdx]);\n        }\n        row.push(react_1.default.createElement(components.TableCell, { key: \"col-\" + rowIdx + i, className: object_1.makeClasses('tbody-td', classes.tbodyCol) }, value));\n    }\n    function onRowClick() {\n        if (typeof onClick === 'function') {\n            onClick(data[rowIdx]);\n        }\n    }\n    return (react_1.default.createElement(components.TableRow, { className: object_1.makeClasses('tbody-tr', classes.tbodyRow), onClick: onRowClick }, row));\n}\nexports.default = BodyRow;\n//# sourceMappingURL=BodyRow.js.map"]},"metadata":{},"sourceType":"script"}