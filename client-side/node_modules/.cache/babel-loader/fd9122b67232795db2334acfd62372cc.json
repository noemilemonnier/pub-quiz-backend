{"ast":null,"code":"var _jsxFileName = \"/Users/noemilemonnier/Desktop/client-side/src/pages/TeamInsert.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport styled from 'styled-components';\nconst Title = styled.h1.attrs({\n  className: 'h1'\n})``;\nconst Container = styled.div.attrs({\n  className: 'container'\n})`\n    background-color: transparent;\n    padding: 2rem;\n`;\nconst Label = styled.label`\n    margin: 5px;\n`;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`\n})`\n    margin: 15px 15px 15px 5px;\n`;\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n\nclass TeamInsert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = async event => {\n      const name = event.target.value;\n\n      if (name !== \"\") {\n        this.setState({\n          name,\n          validationError: \"\"\n        });\n      } else {\n        this.setState({\n          validationError: \"The Team name cannot be empty\",\n          isValid: false\n        });\n      }\n    };\n\n    this.handleChangeInputTeamMembers = async event => {\n      const teamMembers = event.target.value;\n\n      if (teamMembers !== \"\") {\n        this.setState({\n          teamMembers,\n          validationError: \"\"\n        });\n      } else {\n        this.setState({\n          validationError: \"The Team members cannot be empty\",\n          isValid: false\n        });\n      }\n    };\n\n    this.handleIncludeTeam = async () => {\n      const {\n        name,\n        teamMembers,\n        score\n      } = this.state;\n      const payload = {\n        name,\n        teamMembers,\n        score\n      };\n\n      if (this.state.isValid === true) {\n        await api.insertTeam(payload).then(res => {\n          console.log(\" Team:\" + payload.name + \" Members:\" + payload.teamMembers + \" Score:\" + payload.score);\n          this.setState({\n            name: '',\n            teamMembers: '',\n            validationError: \"Team updated successfully\"\n          });\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      teamMembers: '',\n      isValid: true\n    };\n  }\n\n  render() {\n    const {\n      name,\n      teamMembers,\n      score\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Create a Team\"), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Name: \"), /*#__PURE__*/React.createElement(InputText, {\n      type: \"text\",\n      value: name,\n      onChange: this.handleChangeInputName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Team Members: \"), /*#__PURE__*/React.createElement(InputText, {\n      type: \"text\",\n      value: teamMembers,\n      onChange: this.handleChangeInputTeamMembers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleIncludeTeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Add Team\"), /*#__PURE__*/React.createElement(CancelButton, {\n      href: '/teams',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, this.state.validationError));\n  }\n\n}\n\nexport default TeamInsert;","map":{"version":3,"sources":["/Users/noemilemonnier/Desktop/client-side/src/pages/TeamInsert.jsx"],"names":["React","Component","api","styled","Title","h1","attrs","className","Container","div","Label","label","InputText","input","Button","button","CancelButton","a","TeamInsert","constructor","props","handleChangeInputName","event","name","target","value","setState","validationError","isValid","handleChangeInputTeamMembers","teamMembers","handleIncludeTeam","score","state","payload","insertTeam","then","res","console","log","render","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\n\nimport styled from 'styled-components'\n\nconst Title = styled.h1.attrs({\n    className: 'h1',\n})``\n\nconst Container = styled.div.attrs({\n    className: 'container',\n})`\n    background-color: transparent;\n    padding: 2rem;\n`\n\n\nconst Label = styled.label`\n    margin: 5px;\n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\n\nconst Button = styled.button.attrs({\n    className: `btn btn-primary`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst CancelButton = styled.a.attrs({\n    className: `btn btn-danger`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nclass TeamInsert extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            teamMembers: '',\n            isValid: true\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        if(name !== \"\"){\n            this.setState({ \n                name,\n                validationError: \"\" \n            })\n        }\n        else{\n            this.setState({\n                validationError: \"The Team name cannot be empty\",\n                isValid: false,\n            })\n        }\n    }\n\n    handleChangeInputTeamMembers = async event => {\n        const teamMembers = event.target.value\n        if(teamMembers !== \"\"){\n            this.setState({ \n                teamMembers ,\n                validationError: \"\" \n            })\n        }\n        else{\n            this.setState({\n                validationError: \"The Team members cannot be empty\",\n                isValid: false,\n            })\n        }\n    }\n\n    handleIncludeTeam = async () => {\n        const { name, teamMembers, score } = this.state\n        const payload = { name, teamMembers, score}\n        if(this.state.isValid === true){\n            await api.insertTeam(payload).then(res => {\n                console.log(\" Team:\" +payload.name + \" Members:\" + payload.teamMembers + \" Score:\" + payload.score)\n                \n                this.setState({\n                    name: '',\n                    teamMembers: '',\n                    validationError: \"Team updated successfully\"\n                })\n            })\n        }\n        \n    }\n\n    render() {\n        const { name, teamMembers, score } = this.state\n        return (\n            <Container class=\"container\">\n                <Title>Create a Team</Title>\n\n                <Label>Name: </Label>\n                <InputText\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChangeInputName}\n                />\n\n                <Label>Team Members: </Label>\n                <InputText\n                   type=\"text\"\n                   value={teamMembers}\n                   onChange={this.handleChangeInputTeamMembers}\n                />\n\n                <Button onClick={this.handleIncludeTeam}>Add Team</Button>\n                <CancelButton href={'/teams'}>Cancel</CancelButton>\n                <div style={{color: 'red', marginTop: '5px'}}> \n                    {this.state.validationError} \n                </div>\n            </Container> \n        )\n    }\n}\n\nexport default TeamInsert"]},"metadata":{},"sourceType":"module"}