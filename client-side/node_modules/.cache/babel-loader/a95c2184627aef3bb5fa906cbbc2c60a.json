{"ast":null,"code":"var _jsxFileName = \"/Users/noemilemonnier/Desktop/client-side/src/pages/LogIn.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport api from '../api';\nimport styled from 'styled-components';\nconst Container = styled.div.attrs({\n  className: 'container'\n})`\n    background-color: transparent;\n    padding: 2rem;\n`;\n/**\n * Login component\n */\n\nclass LogIn extends Component {\n  constructor() {\n    super();\n\n    this.handleUpdateTeam = async () => {\n      const {\n        name,\n        teamMembers,\n        score\n      } = this.state;\n      const payload = {\n        name,\n        teamMembers,\n        score\n      };\n      await api.updateTeamByName(name, payload).then(res => {\n        //window.alert(`Team updated successfully ` + payload.name)\n        this.setState({\n          name: '',\n          teamMembers: '',\n          score: ''\n        });\n      });\n    };\n\n    this.state = {\n      teams: [],\n      selectedTeam: \"\",\n      validationError: \"\"\n    };\n  } //Fetching list of teams\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/teams\").then(response => {\n      return response.json();\n    }).then(data => {\n      let teamsFromApi = data.map(team => {\n        return {\n          value: team.name,\n          display: team.name\n        };\n      });\n      this.setState({\n        teams: [{\n          value: '',\n          display: '(Select your favourite team)'\n        }].concat(teamsFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } //to update the team as login\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedTeam,\n      onChange: e => this.setState({\n        selectedTeam: e.target.value,\n        validationError: e.target.value === \"\" ? \"You must select your favourite team\" : \"\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, this.state.teams.map(team => /*#__PURE__*/React.createElement(\"option\", {\n      key: team.value,\n      value: team.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 49\n      }\n    }, team.display)))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, this.state.validationError));\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["/Users/noemilemonnier/Desktop/client-side/src/pages/LogIn.jsx"],"names":["React","Component","ReactDOM","api","styled","Container","div","attrs","className","LogIn","constructor","handleUpdateTeam","name","teamMembers","score","state","payload","updateTeamByName","then","res","setState","teams","selectedTeam","validationError","componentDidMount","fetch","response","json","data","teamsFromApi","map","team","value","display","concat","catch","error","console","log","render","e","target","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport api from '../api'\nimport styled from 'styled-components'\n\nconst Container = styled.div.attrs({\n    className: 'container',\n})`\n    background-color: transparent;\n    padding: 2rem;\n`\n\n\n/**\n * Login component\n */\nclass LogIn extends Component {\n    constructor() {\n        super();\n        this.state = {\n            teams: [],\n            selectedTeam: \"\",\n            validationError: \"\"\n        };\n    }\n\n\n    //Fetching list of teams\n    componentDidMount() {\n        fetch(\"http://localhost:8080/teams\")\n        .then((response) => {\n            return response.json();\n        })\n        .then(data => {\n            let teamsFromApi = data.map(team => {\n                return {value: team.name, display: team.name}\n            });\n            this.setState({\n                teams: [{value: '', display: '(Select your favourite team)'}].concat(teamsFromApi)\n            });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    //to update the team as login\n    handleUpdateTeam = async () => {\n        const {name, teamMembers , score} = this.state\n        const payload = { name, teamMembers, score}\n\n        await api.updateTeamByName(name, payload).then(res => {\n            //window.alert(`Team updated successfully ` + payload.name)\n            this.setState({\n                name: '',\n                teamMembers: '',\n                score: '',\n            })\n        })\n    }\n\n    render() {\n        return (\n        <Container class=\"container\">\n          <div>\n              <select \n                value={this.state.selectedTeam}\n                onChange={e => this.setState({selectedTeam: e.target.value,validationError: e.target.value === \"\" ? \"You must select your favourite team\" : \"\"})}>\n                {this.state.teams.map((team) => <option key={team.value} value={team.value}>{team.display}</option>)}\n              </select>\n          </div>\n          <div style={{color: 'red', marginTop: '5px'}}> \n                {this.state.validationError} \n          </div>\n        </Container>    \n        )\n      }\n\n\n}\n\nexport default LogIn"]},"metadata":{},"sourceType":"module"}